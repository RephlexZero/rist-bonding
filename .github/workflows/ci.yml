name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  PKG_CONFIG_PATH: /usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig

# Cancel in-progress runs of the same branch/PR to save CI minutes
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker-ci:
    name: Docker CI Pipeline
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Start services with Docker Compose
        run: |
          docker compose -f docker-compose.ci.yml up --build -d
      
      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to start..."
          sleep 10
      
      - name: Check formatting
        run: |
          docker compose -f docker-compose.ci.yml exec -T rist-bonding-dev \
            cargo fmt --all -- --check
      
      - name: Run clippy
        run: |
          docker compose -f docker-compose.ci.yml exec -T rist-bonding-dev \
            cargo clippy --workspace --all-targets --all-features -- -D warnings
      
      - name: Run unit tests
        run: |
          docker compose -f docker-compose.ci.yml exec -T rist-bonding-dev \
            cargo test --workspace --lib --locked --verbose
      
      - name: Run integration tests
        run: |
          docker compose -f docker-compose.ci.yml exec -T rist-bonding-dev \
            cargo test --workspace --test '*' --locked --verbose
        env:
          # Skip privileged network tests in CI
          SKIP_NETWORK_NAMESPACE_TESTS: "1"
      
      - name: Tear down services
        if: always()
        run: docker compose -f docker-compose.ci.yml down --volumes --remove-orphans

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-audit
        run: cargo install --force cargo-audit
      - name: Run security audit
        run: cargo audit
